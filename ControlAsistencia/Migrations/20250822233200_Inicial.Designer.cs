// <auto-generated />
using System;
using ControlAsistencia.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControlAsistencia.Migrations
{
    [DbContext(typeof(AsistenciaDbContext))]
    [Migration("20250822233200_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("ControlAsistencia.Models.AjusteAsistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AprobadoPorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AsistenciaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreadoEn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreadoPorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaObjetivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HoraNueva")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AprobadoPorId");

                    b.HasIndex("AsistenciaId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("UsuarioId", "FechaObjetivo");

                    b.ToTable("AjustesAsistencias");
                });

            modelBuilder.Entity("ControlAsistencia.Models.Asistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreadoPorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("MarcaEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("UsuarioId", "MarcaEn");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("ControlAsistencia.Models.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ActorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreadoEn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("DetalleJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Entidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("EntidadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ip")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActorId", "CreadoEn");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("ControlAsistencia.Models.Horario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreadoEn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HoraFin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HoraInicio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("ControlAsistencia.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("ActualizadoEn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.HasIndex("Rut")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ControlAsistencia.Models.UsuarioHorario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HorarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VigenteDesde")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VigenteHasta")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HorarioId");

                    b.HasIndex("UsuarioId", "VigenteDesde");

                    b.ToTable("UsuariosHorarios");
                });

            modelBuilder.Entity("ControlAsistencia.Models.AjusteAsistencia", b =>
                {
                    b.HasOne("ControlAsistencia.Models.Usuario", "AprobadoPor")
                        .WithMany()
                        .HasForeignKey("AprobadoPorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ControlAsistencia.Models.Asistencia", "Asistencia")
                        .WithMany()
                        .HasForeignKey("AsistenciaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ControlAsistencia.Models.Usuario", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControlAsistencia.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AprobadoPor");

                    b.Navigation("Asistencia");

                    b.Navigation("CreadoPor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControlAsistencia.Models.Asistencia", b =>
                {
                    b.HasOne("ControlAsistencia.Models.Usuario", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ControlAsistencia.Models.Usuario", "Usuario")
                        .WithMany("Asistencias")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreadoPor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControlAsistencia.Models.Auditoria", b =>
                {
                    b.HasOne("ControlAsistencia.Models.Usuario", "Actor")
                        .WithMany()
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Actor");
                });

            modelBuilder.Entity("ControlAsistencia.Models.UsuarioHorario", b =>
                {
                    b.HasOne("ControlAsistencia.Models.Horario", "Horario")
                        .WithMany()
                        .HasForeignKey("HorarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControlAsistencia.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Horario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControlAsistencia.Models.Usuario", b =>
                {
                    b.Navigation("Asistencias");
                });
#pragma warning restore 612, 618
        }
    }
}
